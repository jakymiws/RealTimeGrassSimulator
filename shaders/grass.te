#version 430 core

layout (quads, equal_spacing, ccw) in;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;


patch in vec4 teV1;
patch in vec4 teV2;
patch in vec4 teProps;// xyz = up, w = stiffness

patch in vec3 teBladeDir;

void main()
{
    float w = teV2.w;

    float u = gl_TessCoord.x;
    float v = gl_TessCoord.y;

    vec3 t1 = teBladeDir;
    vec3 pos = gl_in[0].gl_Position.xyz;
    vec3 tv1 = teV1.xyz;
    vec3 tv2 = teV2.xyz;

    vec3 a = pos + v*(tv1 - pos);
    vec3 b = tv1 + v*(tv2 - tv1);
    vec3 c = a + v*(b - a);

    vec3 c0 = c - w*t1;
    vec3 c1 = c + w*t1;

    vec3 t0 = (b-a)/length(b-a);

    vec3 tangent_cross = cross(t0, t1);

    vec3 n = tangent_cross/length(tangent_cross);

    float t = u + 0.5*v - u*v;

    vec3 bezier_position = (1.0 - t)*c0 + t*c1;

    gl_Position = projection * view  * model * vec4(bezier_position, 1.0);

}
